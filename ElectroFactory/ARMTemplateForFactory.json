{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ElectroFactory"
		},
		"Azure_WW_LABEL_COPY_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Azure_WW_LABEL_COPY'"
		},
		"Azure_WirelessWarehouse_Share_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Azure_WirelessWarehouse_Share'"
		},
		"SalesFiles_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SalesFiles'"
		},
		"TRO_Connect_epds01_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'TRO_Connect_epds01'"
		},
		"Temp_Files_Locations_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Temp_Files_Locations'"
		},
		"Azure_WW_LABEL_COPY_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "waws-prod-sn1-171.ftp.azurewebsites.windows.net"
		},
		"Azure_WW_LABEL_COPY_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "ElectroWebTools\\$ElectroWebTools"
		},
		"BlobtoFTPFunction_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://electro-automation-ps.azurewebsites.net"
		},
		"Electro_Key_Vault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://ElectroKeyVault.vault.azure.net/"
		},
		"ftp_trustedparts_com_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "ftp.trustedparts.com"
		},
		"ftp_trustedparts_com_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "electro"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ECIA Table Build and Export')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "EE_INVENTORY_DUMP",
						"description": "This will process the Inventory and Dump it out to Database table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[_ee_inventory_dump_all]"
						},
						"linkedServiceName": {
							"referenceName": "TRO_Connect_epds01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ecia_export",
						"description": "Runs the _ecia_export Command which builds out the Table used to Export",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "EE_INVENTORY_DUMP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[_ecia_export]"
						},
						"linkedServiceName": {
							"referenceName": "TRO_Connect_epds01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "ecia_export",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ECIA_TO TEXT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"PrimarySelect": {},
									"PricingTable1": {},
									"PricingTable2": {},
									"PricingTable3": {},
									"sink1": {},
									"sink2": {},
									"sink3": {},
									"sink4": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Azure Function1",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "Copy data3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "BlobFTP",
							"method": "GET",
							"headers": {}
						},
						"linkedServiceName": {
							"referenceName": "BlobtoFTPFunction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureFileStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "BlobPricingLevel2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SalesFilesPricingLevel2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data3",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureFileStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "BlobPricingLevel3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SalesFilesPricingLevel3",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data4",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Data flow1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureFileStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "BlobPricingLevel1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SalesFilesPricingLevel1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TRO_Connect_epds01')]",
				"[concat(variables('factoryId'), '/dataflows/ECIA_TO TEXT')]",
				"[concat(variables('factoryId'), '/linkedServices/BlobtoFTPFunction')]",
				"[concat(variables('factoryId'), '/datasets/BlobPricingLevel2')]",
				"[concat(variables('factoryId'), '/datasets/SalesFilesPricingLevel2')]",
				"[concat(variables('factoryId'), '/datasets/BlobPricingLevel3')]",
				"[concat(variables('factoryId'), '/datasets/SalesFilesPricingLevel3')]",
				"[concat(variables('factoryId'), '/datasets/BlobPricingLevel1')]",
				"[concat(variables('factoryId'), '/datasets/SalesFilesPricingLevel1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WirelessWareHouse_Labels')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_u7h",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "site/wwwroot/labels/"
							},
							{
								"name": "Destination",
								"value": "/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FtpReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"useBinaryTransfer": true,
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureFileStorageWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"skipErrorFile": {
								"fileMissing": true
							}
						},
						"inputs": [
							{
								"referenceName": "WirelessWareHouse_FTP_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Azure_Wireless_WareHouse_Share",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WirelessWareHouse_FTP_Source')]",
				"[concat(variables('factoryId'), '/datasets/Azure_Wireless_WareHouse_Share')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure_Wireless_WareHouse_Share')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Azure_WirelessWarehouse_Share",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureFileStorageLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Azure_WirelessWarehouse_Share')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobPricingLevel1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Temp_Files_Locations",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "PricingLevel1.csv",
						"folderPath": "PriceFiles",
						"container": "datafactoryfiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "manufact",
						"type": "String"
					},
					{
						"name": "part",
						"type": "String"
					},
					{
						"name": "weblink",
						"type": "String"
					},
					{
						"name": "qty",
						"type": "String"
					},
					{
						"name": "delivery",
						"type": "String"
					},
					{
						"name": "oq1",
						"type": "String"
					},
					{
						"name": "op1",
						"type": "String"
					},
					{
						"name": "oq2",
						"type": "String"
					},
					{
						"name": "op2",
						"type": "String"
					},
					{
						"name": "oq3",
						"type": "String"
					},
					{
						"name": "op3",
						"type": "String"
					},
					{
						"name": "oq4",
						"type": "String"
					},
					{
						"name": "op4",
						"type": "String"
					},
					{
						"name": "oq5",
						"type": "String"
					},
					{
						"name": "op5",
						"type": "String"
					},
					{
						"name": "oq6",
						"type": "String"
					},
					{
						"name": "op6",
						"type": "String"
					},
					{
						"name": "oq7",
						"type": "String"
					},
					{
						"name": "op7",
						"type": "String"
					},
					{
						"name": "oq8",
						"type": "String"
					},
					{
						"name": "op8",
						"type": "String"
					},
					{
						"name": "oq9",
						"type": "String"
					},
					{
						"name": "op9",
						"type": "String"
					},
					{
						"name": "oq10",
						"type": "String"
					},
					{
						"name": "op10",
						"type": "String"
					},
					{
						"name": "oq11",
						"type": "String"
					},
					{
						"name": "op11",
						"type": "String"
					},
					{
						"name": "vdesc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Temp_Files_Locations')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobPricingLevel2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Temp_Files_Locations",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "PricingLevel2.csv",
						"folderPath": "PriceFiles",
						"container": "datafactoryfiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "manufact",
						"type": "String"
					},
					{
						"name": "part",
						"type": "String"
					},
					{
						"name": "weblink",
						"type": "String"
					},
					{
						"name": "qty",
						"type": "String"
					},
					{
						"name": "delivery",
						"type": "String"
					},
					{
						"name": "oq1",
						"type": "String"
					},
					{
						"name": "op1",
						"type": "String"
					},
					{
						"name": "oq2",
						"type": "String"
					},
					{
						"name": "op2",
						"type": "String"
					},
					{
						"name": "oq3",
						"type": "String"
					},
					{
						"name": "op3",
						"type": "String"
					},
					{
						"name": "oq4",
						"type": "String"
					},
					{
						"name": "op4",
						"type": "String"
					},
					{
						"name": "oq5",
						"type": "String"
					},
					{
						"name": "op5",
						"type": "String"
					},
					{
						"name": "oq6",
						"type": "String"
					},
					{
						"name": "op6",
						"type": "String"
					},
					{
						"name": "oq7",
						"type": "String"
					},
					{
						"name": "op7",
						"type": "String"
					},
					{
						"name": "oq8",
						"type": "String"
					},
					{
						"name": "op8",
						"type": "String"
					},
					{
						"name": "oq9",
						"type": "String"
					},
					{
						"name": "op9",
						"type": "String"
					},
					{
						"name": "oq10",
						"type": "String"
					},
					{
						"name": "op10",
						"type": "String"
					},
					{
						"name": "oq11",
						"type": "String"
					},
					{
						"name": "op11",
						"type": "String"
					},
					{
						"name": "vdesc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Temp_Files_Locations')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobPricingLevel3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Temp_Files_Locations",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "PricingLevel3.csv",
						"folderPath": "PriceFiles",
						"container": "datafactoryfiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "manufact",
						"type": "String"
					},
					{
						"name": "part",
						"type": "String"
					},
					{
						"name": "weblink",
						"type": "String"
					},
					{
						"name": "qty",
						"type": "String"
					},
					{
						"name": "delivery",
						"type": "String"
					},
					{
						"name": "oq1",
						"type": "String"
					},
					{
						"name": "op1",
						"type": "String"
					},
					{
						"name": "oq2",
						"type": "String"
					},
					{
						"name": "op2",
						"type": "String"
					},
					{
						"name": "oq3",
						"type": "String"
					},
					{
						"name": "op3",
						"type": "String"
					},
					{
						"name": "oq4",
						"type": "String"
					},
					{
						"name": "op4",
						"type": "String"
					},
					{
						"name": "oq5",
						"type": "String"
					},
					{
						"name": "op5",
						"type": "String"
					},
					{
						"name": "oq6",
						"type": "String"
					},
					{
						"name": "op6",
						"type": "String"
					},
					{
						"name": "oq7",
						"type": "String"
					},
					{
						"name": "op7",
						"type": "String"
					},
					{
						"name": "oq8",
						"type": "String"
					},
					{
						"name": "op8",
						"type": "String"
					},
					{
						"name": "oq9",
						"type": "String"
					},
					{
						"name": "op9",
						"type": "String"
					},
					{
						"name": "oq10",
						"type": "String"
					},
					{
						"name": "op10",
						"type": "String"
					},
					{
						"name": "oq11",
						"type": "String"
					},
					{
						"name": "op11",
						"type": "String"
					},
					{
						"name": "vdesc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Temp_Files_Locations')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pricing_Table_1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TRO_Connect_epds01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlMITable",
				"schema": [
					{
						"name": "manufact",
						"type": "varchar"
					},
					{
						"name": "part",
						"type": "varchar"
					},
					{
						"name": "weblink",
						"type": "varchar"
					},
					{
						"name": "qty",
						"type": "int",
						"precision": 10
					},
					{
						"name": "delivery",
						"type": "varchar"
					},
					{
						"name": "oq1",
						"type": "int",
						"precision": 10
					},
					{
						"name": "op1",
						"type": "decimal",
						"precision": 19,
						"scale": 3
					},
					{
						"name": "oq2",
						"type": "int",
						"precision": 10
					},
					{
						"name": "op2",
						"type": "decimal",
						"precision": 19,
						"scale": 3
					},
					{
						"name": "oq3",
						"type": "int",
						"precision": 10
					},
					{
						"name": "op3",
						"type": "decimal",
						"precision": 19,
						"scale": 3
					},
					{
						"name": "oq4",
						"type": "int",
						"precision": 10
					},
					{
						"name": "op4",
						"type": "decimal",
						"precision": 19,
						"scale": 3
					},
					{
						"name": "oq5",
						"type": "int",
						"precision": 10
					},
					{
						"name": "op5",
						"type": "decimal",
						"precision": 19,
						"scale": 3
					},
					{
						"name": "oq6",
						"type": "int",
						"precision": 10
					},
					{
						"name": "op6",
						"type": "decimal",
						"precision": 19,
						"scale": 3
					},
					{
						"name": "oq7",
						"type": "int",
						"precision": 10
					},
					{
						"name": "op7",
						"type": "decimal",
						"precision": 19,
						"scale": 3
					},
					{
						"name": "oq8",
						"type": "int",
						"precision": 10
					},
					{
						"name": "op8",
						"type": "decimal",
						"precision": 19,
						"scale": 3
					},
					{
						"name": "oq9",
						"type": "int",
						"precision": 10
					},
					{
						"name": "op9",
						"type": "decimal",
						"precision": 19,
						"scale": 3
					},
					{
						"name": "oq10",
						"type": "int",
						"precision": 10
					},
					{
						"name": "op10",
						"type": "decimal",
						"precision": 19,
						"scale": 3
					},
					{
						"name": "oq11",
						"type": "int",
						"precision": 10
					},
					{
						"name": "op11",
						"type": "decimal",
						"precision": 19,
						"scale": 3
					},
					{
						"name": "vdesc",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "_Inventory_Export1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TRO_Connect_epds01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pricing_Table_2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TRO_Connect_epds01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlMITable",
				"schema": [
					{
						"name": "manufact",
						"type": "varchar"
					},
					{
						"name": "part",
						"type": "varchar"
					},
					{
						"name": "weblink",
						"type": "varchar"
					},
					{
						"name": "qty",
						"type": "int",
						"precision": 10
					},
					{
						"name": "delivery",
						"type": "varchar"
					},
					{
						"name": "oq1",
						"type": "int",
						"precision": 10
					},
					{
						"name": "op1",
						"type": "decimal",
						"precision": 19,
						"scale": 3
					},
					{
						"name": "oq2",
						"type": "int",
						"precision": 10
					},
					{
						"name": "op2",
						"type": "decimal",
						"precision": 19,
						"scale": 3
					},
					{
						"name": "oq3",
						"type": "int",
						"precision": 10
					},
					{
						"name": "op3",
						"type": "decimal",
						"precision": 19,
						"scale": 3
					},
					{
						"name": "oq4",
						"type": "int",
						"precision": 10
					},
					{
						"name": "op4",
						"type": "decimal",
						"precision": 19,
						"scale": 3
					},
					{
						"name": "oq5",
						"type": "int",
						"precision": 10
					},
					{
						"name": "op5",
						"type": "decimal",
						"precision": 19,
						"scale": 3
					},
					{
						"name": "oq6",
						"type": "int",
						"precision": 10
					},
					{
						"name": "op6",
						"type": "decimal",
						"precision": 19,
						"scale": 3
					},
					{
						"name": "oq7",
						"type": "int",
						"precision": 10
					},
					{
						"name": "op7",
						"type": "decimal",
						"precision": 19,
						"scale": 3
					},
					{
						"name": "oq8",
						"type": "int",
						"precision": 10
					},
					{
						"name": "op8",
						"type": "decimal",
						"precision": 19,
						"scale": 3
					},
					{
						"name": "oq9",
						"type": "int",
						"precision": 10
					},
					{
						"name": "op9",
						"type": "decimal",
						"precision": 19,
						"scale": 3
					},
					{
						"name": "oq10",
						"type": "int",
						"precision": 10
					},
					{
						"name": "op10",
						"type": "decimal",
						"precision": 19,
						"scale": 3
					},
					{
						"name": "oq11",
						"type": "int",
						"precision": 10
					},
					{
						"name": "op11",
						"type": "decimal",
						"precision": 19,
						"scale": 3
					},
					{
						"name": "vdesc",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "_Inventory_Export2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TRO_Connect_epds01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pricing_Table_3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TRO_Connect_epds01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlMITable",
				"schema": [
					{
						"name": "manufact",
						"type": "varchar"
					},
					{
						"name": "part",
						"type": "varchar"
					},
					{
						"name": "weblink",
						"type": "varchar"
					},
					{
						"name": "qty",
						"type": "int",
						"precision": 10
					},
					{
						"name": "delivery",
						"type": "varchar"
					},
					{
						"name": "oq1",
						"type": "int",
						"precision": 10
					},
					{
						"name": "op1",
						"type": "decimal",
						"precision": 19,
						"scale": 3
					},
					{
						"name": "oq2",
						"type": "int",
						"precision": 10
					},
					{
						"name": "op2",
						"type": "decimal",
						"precision": 19,
						"scale": 3
					},
					{
						"name": "oq3",
						"type": "int",
						"precision": 10
					},
					{
						"name": "op3",
						"type": "decimal",
						"precision": 19,
						"scale": 3
					},
					{
						"name": "oq4",
						"type": "int",
						"precision": 10
					},
					{
						"name": "op4",
						"type": "decimal",
						"precision": 19,
						"scale": 3
					},
					{
						"name": "oq5",
						"type": "int",
						"precision": 10
					},
					{
						"name": "op5",
						"type": "decimal",
						"precision": 19,
						"scale": 3
					},
					{
						"name": "oq6",
						"type": "int",
						"precision": 10
					},
					{
						"name": "op6",
						"type": "decimal",
						"precision": 19,
						"scale": 3
					},
					{
						"name": "oq7",
						"type": "int",
						"precision": 10
					},
					{
						"name": "op7",
						"type": "decimal",
						"precision": 19,
						"scale": 3
					},
					{
						"name": "oq8",
						"type": "int",
						"precision": 10
					},
					{
						"name": "op8",
						"type": "decimal",
						"precision": 19,
						"scale": 3
					},
					{
						"name": "oq9",
						"type": "int",
						"precision": 10
					},
					{
						"name": "op9",
						"type": "decimal",
						"precision": 19,
						"scale": 3
					},
					{
						"name": "oq10",
						"type": "int",
						"precision": 10
					},
					{
						"name": "op10",
						"type": "decimal",
						"precision": 19,
						"scale": 3
					},
					{
						"name": "oq11",
						"type": "int",
						"precision": 10
					},
					{
						"name": "op11",
						"type": "decimal",
						"precision": 19,
						"scale": 3
					},
					{
						"name": "vdesc",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "_Inventory_Export3"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TRO_Connect_epds01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesFilesPricingLevel1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SalesFiles",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureFileStorageLocation",
						"fileName": {
							"value": "@concat(replace('PricingLevel1.csv','.csv',''), '_', formatDateTime(convertTimeZone(utcnow(),'UTC','Eastern Standard Time'),'yyyy-MM-ddTHHmmss'), '.csv')",
							"type": "Expression"
						},
						"folderPath": "Inventory Export"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SalesFiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesFilesPricingLevel2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SalesFiles",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureFileStorageLocation",
						"fileName": {
							"value": "@concat(replace('PricingLevel2.csv','.csv',''), '_', formatDateTime(convertTimeZone(utcnow(),'UTC','Eastern Standard Time'),'yyyy-MM-ddTHHmmss'), '.csv')",
							"type": "Expression"
						},
						"folderPath": "Inventory Export"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SalesFiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesFilesPricingLevel3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SalesFiles",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureFileStorageLocation",
						"fileName": {
							"value": "@concat(replace('PricingLevel3.csv','.csv',''), '_', formatDateTime(convertTimeZone(utcnow(),'UTC','Eastern Standard Time'),'yyyy-MM-ddTHHmmss'), '.csv')",
							"type": "Expression"
						},
						"folderPath": "Inventory Export"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SalesFiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WirelessWareHouse_FTP_Source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Azure_WW_LABEL_COPY",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "FtpServerLocation",
						"folderPath": "site/wwwroot/labels"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Azure_WW_LABEL_COPY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/epdso1_ECIA_Table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TRO_Connect_epds01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlMITable",
				"schema": [
					{
						"name": "lin_no",
						"type": "int",
						"precision": 10
					},
					{
						"name": "out_text",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "_ecia_global_standard_region"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TRO_Connect_epds01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure_WW_LABEL_COPY')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FtpServer",
				"typeProperties": {
					"host": "[parameters('Azure_WW_LABEL_COPY_properties_typeProperties_host')]",
					"port": 21,
					"enableSsl": true,
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('Azure_WW_LABEL_COPY_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Azure_WW_LABEL_COPY_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure_WirelessWarehouse_Share')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFileStorage",
				"typeProperties": {
					"connectionString": "[parameters('Azure_WirelessWarehouse_Share_connectionString')]",
					"fileShare": "epds-ww-files"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobtoFTPFunction')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('BlobtoFTPFunction_properties_typeProperties_functionAppUrl')]",
					"functionKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "Electro_Key_Vault",
							"type": "LinkedServiceReference"
						},
						"secretName": "BlobtoFTP"
					},
					"authentication": "Anonymous"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Electro_Key_Vault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Electro_Key_Vault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('Electro_Key_Vault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesFiles')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFileStorage",
				"typeProperties": {
					"connectionString": "[parameters('SalesFiles_connectionString')]",
					"fileShare": "salesshare"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRO_Connect_epds01')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlMI",
				"typeProperties": {
					"connectionString": "[parameters('TRO_Connect_epds01_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "Electro_Key_Vault",
							"type": "LinkedServiceReference"
						},
						"secretName": "epdsuser"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Electro_Key_Vault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Temp_Files_Locations')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Temp Place to Put Delimited Files before FTP off to other locations",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Temp_Files_Locations_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ftp_trustedparts_com')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ftp.trustedparts.com",
				"annotations": [],
				"type": "FtpServer",
				"typeProperties": {
					"host": "[parameters('ftp_trustedparts_com_properties_typeProperties_host')]",
					"port": 21,
					"enableSsl": false,
					"enableServerCertificateValidation": false,
					"authenticationType": "Basic",
					"userName": "[parameters('ftp_trustedparts_com_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "Electro_Key_Vault",
							"type": "LinkedServiceReference"
						},
						"secretName": "ftptrustedpartscom",
						"secretVersion": ""
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Electro_Key_Vault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Every 1 Minute Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "WirelessWareHouse_Labels",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2021-12-01T17:37:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/WirelessWareHouse_Labels')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Weekly Saterday 17pm')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Week",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ECIA Table Build and Export",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2021-09-12T19:14:00",
						"timeZone": "Central Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								17
							],
							"weekDays": [
								"Saturday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ECIA Table Build and Export')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ECIA_TO TEXT')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "epdso1_ECIA_Table",
								"type": "DatasetReference"
							},
							"name": "PrimarySelect"
						},
						{
							"dataset": {
								"referenceName": "Pricing_Table_1",
								"type": "DatasetReference"
							},
							"name": "PricingTable1"
						},
						{
							"dataset": {
								"referenceName": "Pricing_Table_2",
								"type": "DatasetReference"
							},
							"name": "PricingTable2"
						},
						{
							"dataset": {
								"referenceName": "Pricing_Table_3",
								"type": "DatasetReference"
							},
							"name": "PricingTable3"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "Temp_Files_Locations",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						},
						{
							"linkedService": {
								"referenceName": "Temp_Files_Locations",
								"type": "LinkedServiceReference"
							},
							"name": "sink2"
						},
						{
							"linkedService": {
								"referenceName": "Temp_Files_Locations",
								"type": "LinkedServiceReference"
							},
							"name": "sink3"
						},
						{
							"linkedService": {
								"referenceName": "Temp_Files_Locations",
								"type": "LinkedServiceReference"
							},
							"name": "sink4"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						},
						{
							"name": "Sort1"
						}
					],
					"script": "source(output(\n\t\tlin_no as integer,\n\t\tout_text as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'NONE',\n\tformat: 'table') ~> PrimarySelect\nsource(output(\n\t\tmanufact as string,\n\t\tpart as string,\n\t\tweblink as string,\n\t\tqty as integer,\n\t\tdelivery as string,\n\t\toq1 as integer,\n\t\top1 as decimal(19,3),\n\t\toq2 as integer,\n\t\top2 as decimal(19,3),\n\t\toq3 as integer,\n\t\top3 as decimal(19,3),\n\t\toq4 as integer,\n\t\top4 as decimal(19,3),\n\t\toq5 as integer,\n\t\top5 as decimal(19,3),\n\t\toq6 as integer,\n\t\top6 as decimal(19,3),\n\t\toq7 as integer,\n\t\top7 as decimal(19,3),\n\t\toq8 as integer,\n\t\top8 as decimal(19,3),\n\t\toq9 as integer,\n\t\top9 as decimal(19,3),\n\t\toq10 as integer,\n\t\top10 as decimal(19,3),\n\t\toq11 as integer,\n\t\top11 as decimal(19,3),\n\t\tvdesc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tpartitionBy('hash', 1)) ~> PricingTable1\nsource(output(\n\t\tmanufact as string,\n\t\tpart as string,\n\t\tweblink as string,\n\t\tqty as integer,\n\t\tdelivery as string,\n\t\toq1 as integer,\n\t\top1 as decimal(19,3),\n\t\toq2 as integer,\n\t\top2 as decimal(19,3),\n\t\toq3 as integer,\n\t\top3 as decimal(19,3),\n\t\toq4 as integer,\n\t\top4 as decimal(19,3),\n\t\toq5 as integer,\n\t\top5 as decimal(19,3),\n\t\toq6 as integer,\n\t\top6 as decimal(19,3),\n\t\toq7 as integer,\n\t\top7 as decimal(19,3),\n\t\toq8 as integer,\n\t\top8 as decimal(19,3),\n\t\toq9 as integer,\n\t\top9 as decimal(19,3),\n\t\toq10 as integer,\n\t\top10 as decimal(19,3),\n\t\toq11 as integer,\n\t\top11 as decimal(19,3),\n\t\tvdesc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tpartitionBy('hash', 1)) ~> PricingTable2\nsource(output(\n\t\tmanufact as string,\n\t\tpart as string,\n\t\tweblink as string,\n\t\tqty as integer,\n\t\tdelivery as string,\n\t\toq1 as integer,\n\t\top1 as decimal(19,3),\n\t\toq2 as integer,\n\t\top2 as decimal(19,3),\n\t\toq3 as integer,\n\t\top3 as decimal(19,3),\n\t\toq4 as integer,\n\t\top4 as decimal(19,3),\n\t\toq5 as integer,\n\t\top5 as decimal(19,3),\n\t\toq6 as integer,\n\t\top6 as decimal(19,3),\n\t\toq7 as integer,\n\t\top7 as decimal(19,3),\n\t\toq8 as integer,\n\t\top8 as decimal(19,3),\n\t\toq9 as integer,\n\t\top9 as decimal(19,3),\n\t\toq10 as integer,\n\t\top10 as decimal(19,3),\n\t\toq11 as integer,\n\t\top11 as decimal(19,3),\n\t\tvdesc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tpartitionBy('hash', 1)) ~> PricingTable3\nSort1 select(mapColumn(\n\t\tout_text\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nPrimarySelect sort(asc(lin_no, true)) ~> Sort1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delimited',\n\tcontainer: 'datafactoryfiles',\n\tfolderPath: 'ECIA',\n\tcolumnDelimiter: '',\n\tescapeChar: '',\n\tquoteChar: '',\n\tcolumnNamesAsHeader: false,\n\tpartitionFileNames:['ECIAGlobalStandardRegion1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1\nPricingTable1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delimited',\n\tcontainer: 'datafactoryfiles',\n\tfolderPath: 'PriceFiles',\n\tcolumnDelimiter: ',',\n\tescapeChar: '\\\\',\n\tquoteChar: '\\\"',\n\tcolumnNamesAsHeader: true,\n\tpartitionFileNames:['PricingLevel1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2\nPricingTable2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delimited',\n\tcontainer: 'datafactoryfiles',\n\tfolderPath: 'PriceFiles',\n\tcolumnDelimiter: ',',\n\tescapeChar: '\\\\',\n\tquoteChar: '\\\"',\n\tcolumnNamesAsHeader: true,\n\tpartitionFileNames:['PricingLevel2.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink3\nPricingTable3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delimited',\n\tcontainer: 'datafactoryfiles',\n\tfolderPath: 'PriceFiles',\n\tcolumnDelimiter: ',',\n\tescapeChar: '\\\\',\n\tquoteChar: '\\\"',\n\tcolumnNamesAsHeader: true,\n\tpartitionFileNames:['PricingLevel3.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink4"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/epdso1_ECIA_Table')]",
				"[concat(variables('factoryId'), '/datasets/Pricing_Table_1')]",
				"[concat(variables('factoryId'), '/datasets/Pricing_Table_2')]",
				"[concat(variables('factoryId'), '/datasets/Pricing_Table_3')]",
				"[concat(variables('factoryId'), '/linkedServices/Temp_Files_Locations')]"
			]
		}
	]
}