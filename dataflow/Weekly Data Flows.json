{
	"name": "Weekly Data Flows",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "TRO_Connect_epds01",
						"type": "LinkedServiceReference"
					},
					"name": "EPDS01AROpen"
				},
				{
					"linkedService": {
						"referenceName": "TRO_Connect_epds01",
						"type": "LinkedServiceReference"
					},
					"name": "EPDSAPOpen"
				},
				{
					"linkedService": {
						"referenceName": "TRO_Connect_epds01",
						"type": "LinkedServiceReference"
					},
					"name": "EPDSPOOpen"
				},
				{
					"linkedService": {
						"referenceName": "TRO_Connect_epds01",
						"type": "LinkedServiceReference"
					},
					"name": "WeeklyTRANSACTIONFile",
					"description": "Full Transaction files for Electro."
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "Temp_Files_Locations",
						"type": "LinkedServiceReference"
					},
					"name": "AROpen",
					"description": "AR Open Report"
				},
				{
					"linkedService": {
						"referenceName": "Temp_Files_Locations",
						"type": "LinkedServiceReference"
					},
					"name": "APOpen"
				},
				{
					"linkedService": {
						"referenceName": "Temp_Files_Locations",
						"type": "LinkedServiceReference"
					},
					"name": "POOpen"
				},
				{
					"linkedService": {
						"referenceName": "Temp_Files_Locations",
						"type": "LinkedServiceReference"
					},
					"name": "WeeklyTransactioNFileSink",
					"description": "place to put the weekly transactionf iles"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'query',",
				"     store: 'sqlserver',",
				"     query: 'select c.cust_no \\'Customer ID\\', c.cust_name \\'Customer Name\\', case when ((r.amt > 0) and (c.terms_code is null or c.terms_code = \\'\\')) then s.code_desc else s2.code_desc end as \\'Terms\\', \\nr.doc_date \\'Invoice Date\\', r.due_date \\'Due Date\\', r.amt \\'Balance\\'\\nfrom aropen r\\nleft join customer c on c.cust_no = r.cust_no\\nleft join codes s on s.code_id = c.terms_code and s.code_type = \\'T\\'\\nleft join inv_hedr h on h.inv_no = r.doc_no\\nleft join codes s2 on s2.code_id = h.terms_code and s2.code_type = \\'T\\' \\nwhere r.doc_type = \\'I\\' and r.doc_no not like \\'UK%\\'\\ngroup by r.aropen_rec, c.cust_no, c.cust_name, case when ((r.amt > 0) and (c.terms_code is null or c.terms_code = \\'\\')) then s.code_desc else s2.code_desc end, \\nr.doc_date, r.due_date, r.amt\\nunion all\\nselect  c.cust_no \\'Customer ID\\', c.cust_name \\'Customer Name\\',\\'NULL\\' as \\'Terms\\', \\nr.doc_date \\'Invoice Date\\', r.due_date \\'Due Date\\', r.amt \\'Balance\\'\\nfrom aropen r\\nleft join customer c on c.cust_no = r.cust_no\\nwhere r.doc_type = \\'I\\' and r.doc_no like \\'UK%\\'\\ngroup by r.aropen_rec, c.cust_no, c.cust_name, \\nr.doc_date, r.due_date, r.amt\\nunion all\\nselect c.cust_no \\'Customer ID\\', c.cust_name \\'Customer Name\\',\\'NULL\\' as \\'Terms\\', \\nr.doc_date \\'Invoice Date\\', r.due_date \\'Due Date\\', r.amt \\'Balance\\'\\nfrom aropen r\\nleft join customer c on c.cust_no = r.cust_no\\nwhere r.doc_type <> \\'I\\'\\ngroup by r.aropen_rec, c.cust_no, c.cust_name, \\nr.doc_date, r.due_date, r.amt\\n',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> EPDS01AROpen",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'query',",
				"     store: 'sqlserver',",
				"     query: 'select v.vend_no \\'Vendor ID\\', v.ap_name \\'Vendor Name\\', case when ((p.inv_amt > 0) and  (x.terms_code = \\'\\' or x.terms_code is null)) then t.code_desc else t2.code_desc end \\'Terms\\', p.invc_dt \\'Invoice Date\\', p.due_date \\'Due Date\\', p.inv_amt \\'Balance/Invoice Amount\\'\\nfrom apopen p\\nleft join aptrx x on x.voucher_no = p.voucher_no and x.reg_int_id = p.reg_int_id\\nleft join vendor v on v.vend_no = p.vend_no\\nleft join codes t on t.code_id = v.terms_code and t.code_type = \\'T\\'\\nleft join codes t2 on t2. code_id = x.terms_code and t2.code_type = \\'T\\'\\n',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> EPDSAPOpen",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'query',",
				"     store: 'sqlserver',",
				"     query: 'select h.vend_no \\'Vendor ID\\', v.ap_name \\'Vendor Name\\', t.code_desc \\'Terms\\', d.promise_dt \\'Ship/Invoice Date (Anticipated)\\', d.due_date \\'Due Date (Promised Date)\\', (d.bal_of_ord * d.unit_cost) \\'Remaining Amount (Cost)\\'\\nfrom po_detl d\\njoin po_hedr h on h.po_no = d.po_no\\njoin vendor v on v.vend_no = h.vend_no\\njoin codes t on t.code_id = h.terms_code and t.code_type = \\'T\\'\\nwhere h.status <> \\'V\\' and h.status <> \\'C\\' and h.status <> \\'C\\' and h.status <> \\'V\\' and d.bal_of_ord > 0 and h.shop_po = \\'N\\'\\n',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> EPDSPOOpen",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'query',",
				"     store: 'sqlserver',",
				"     query: '/* Rev 1 - Set to look back at last 365 days.  Will be running weekly.  Only thing Revenue Analytics might want is unit cost and unit price.  TD 3-16-23\\n*/\\nselect x.inv_trx_rec \\'Inventory Transaction Record\\', x.order_no \\'Order Number\\', x.lin_no \\'Order Line\\', x.trx_date \\'Invoice Date\\', c.cust_name as \\'Customer Name\\', c.cust_no as \\'Customer Number\\',\\n                            case when c.cust_type like \\'A%\\' then \\'Subcontractor\\'\\n                                              when c.cust_type like \\'B%\\' then \\'OEM\\'\\n                                              when (c.cust_type like \\'C%\\' or c.cust_Type like \\'D%\\') then \\'Aftermarket\\'\\n                                              when c.cust_type like \\'E%\\' then \\'Government\\'\\n                                              when c.cust_type like \\'F%\\' then \\'Franchised Distributor\\'\\n                                              when c.cust_type like \\'G%\\' then \\'Broker/Disty Not Franchised\\'\\n                                                       else \\'Other\\' \\n                                                       end as \\'Customer Classification\\',\\ns5.slsman_nam \\'Salesman\\',  case when  h4.ord_type = \\'C\\' then \\'Credit Order\\' else \\'Sales Order\\' end as \\'Order Type\\',  x.item_no as \\'SKU\\', x.manu_no as \\'Manu No\\', x.vend_no as \\'Vend No\\', s.code_desc as \\'Product Type\\', \\n                                               case when d6.pkg_label = \\'NONE\\' then i.uom\\n                                                                when d6.pkg_label = \\'\\' then i.uom\\n                                                                  else d6.pkg_label end as \\'Ship UOM\\'\\n                                                , h.st_city as \\'Ship-to City\\', h.st_state as \\'Ship-to State\\', h.st_cntry as \\'Ship-to Country\\',\\'Electro\\' as \\'Business line\\', x.trx_qty \\'Transaction Quantity\\', (x.unit_cost * x.trx_qty) as \\'Extended Inventory Cost\\', (x.unit_price * x.trx_Qty) as \\'Extended Resale\\', round(-((x.unit_cost / x.unit_price) -1),2) as \\'Margin\\',  \\'USD\\' as \\'Currency\\', case\\n                           when y.item_no is NULL then \\'Ad-hoc\\'\\n                           else \\'LTA\\'\\n                           end as \\'LTA vs. Ad-hoc\\', case\\n                           when w.stk_item = \\'Y\\' then \\'Stocking\\'\\n                           when x.vend_no like \\'%SHOP%\\' then \\'Resale\\'\\n                           else \\'Purchasing\\'\\n                           end as \\'Inventory type\\',case\\n                           when x.vend_no like \\'%SHOP%\\' and x.manu_no <> \\'ELEENT\\' then \\'Value-Add Connector\\'\\n                           when x.vend_no like \\'%SHOP%\\' and x.manu_no = \\'ELEENT\\' and i.prod_cat = \\'CAB\\' then \\'Cable Assembly\\'\\n                           when x.vend_no like \\'%SHOP%\\' and x.manu_no = \\'ELEENT\\' and i.prod_cat <> \\'CAB\\' then \\'Other Value-Add Assembly\\'\\n                           else \\'Non-VA\\'\\n                           end \\'Distribution Type\\'\\nfrom inv_trx x\\njoin ord_Detl d6 on d6.order_no = x.order_no and d6.lin_no = x.lin_no\\njoin ord_hedr h4 on h4.order_no = x.order_no\\njoin slsman s5 on s5.slsman_no = x.slsman_1 \\njoin customer c on c.cust_no = x.cust_no\\njoin item i on i.item_no = x.item_no and i.manu_no = x.manu_no\\njoin codes s on s.code_id = i.prod_cat and s.code_type = \\'P\\'\\njoin shp_hedr h on h.ship_no = x.ship_no\\nleft join (select  distinct (d.item_no+d.manu_no+h.cust_no) as \\'contract_identifier\\', h.cust_no, d.item_no, d.manu_no\\n               from ord_detl d\\n                     join ord_hedr h on h.order_no = d.order_no and h.ord_type = \\'N\\'\\n                     where d.status <> \\'V\\' and h.status <> \\'V\\') y on y.cust_no = x.cust_no and y.manu_no = x.manu_no and y.item_no = x.item_no\\nleft join (select distinct (w.item_no+w.manu_no) as \\'stocking_identifier\\', w.item_no, w.manu_no, w.stk_item\\n                     from itm_whse w\\n                     where w.stk_item = \\'Y\\') w on w.item_no = x.item_no and w.manu_no = x.manu_no\\nwhere  \\n  x.trx_qty > 0 and x.ship_debit_amt = 0 and x.unit_cost <> \\'0\\' and x.unit_price <> \\'0\\' and x.trx_type = \\'S\\' and x.cust_no not like \\'%SHOP%\\' and x.trx_date between ((getdate() - 365)) and ((getdate()))\\nunion\\n-- Regular shipments (cost and resale are both greater than zero) with a ship and debit\\nselect  x.inv_trx_rec \\'Inventory Transaction Record\\', x.order_no \\'Order Number\\', x.lin_no \\'Order Line\\', x.trx_date \\'Invoice Date\\', c.cust_name as \\'Customer Name\\', c.cust_no as \\'Customer Number\\',\\n                            case when c.cust_type like \\'A%\\' then \\'Subcontractor\\'\\n                                              when c.cust_type like \\'B%\\' then \\'OEM\\'\\n                                              when (c.cust_type like \\'C%\\' or c.cust_Type like \\'D%\\') then \\'Aftermarket\\'\\n                                              when c.cust_type like \\'E%\\' then \\'Government\\'\\n                                              when c.cust_type like \\'F%\\' then \\'Franchised Distributor\\'\\n                                              when c.cust_type like \\'G%\\' then \\'Broker/Disty Not Franchised\\'\\n                                                       else \\'Other\\' \\n                                                       end as \\'Customer Classification\\',\\ns5.slsman_nam \\'Salesman\\',  case when  h4.ord_type = \\'C\\' then \\'Credit Order\\' else \\'Sales Order\\' end as \\'Order Type\\',  x.item_no as \\'SKU\\', x.manu_no as \\'Manu No\\', x.vend_no as \\'Vend No\\', s.code_desc as \\'Product Type\\', \\n                                               case when d6.pkg_label = \\'NONE\\' then i.uom\\n                                                                when d6.pkg_label = \\'\\' then i.uom\\n                                                                  else d6.pkg_label end as \\'Ship UOM\\'\\n                                                , h.st_city as \\'Ship-to City\\', h.st_state as \\'Ship-to State\\', h.st_cntry as \\'Ship-to Country\\',\\'Electro\\' as \\'Business line\\', x.trx_qty \\'Transaction Quantity\\', ((x.unit_cost -(x.ship_debit_amt / x.trx_qty))  * x.trx_qty) as \\'Extended Inventory Cost\\', (x.unit_price * x.trx_Qty) as \\'Extended Resale\\', round(-(((x.unit_cost - (x.ship_debit_amt / x.trx_Qty)) / x.unit_price) -1),2) as \\'Margin\\',  \\'USD\\' as \\'Currency\\', case\\n                           when y.item_no is NULL then \\'Ad-hoc\\'\\n                           else \\'LTA\\'\\n                           end as \\'LTA vs. Ad-hoc\\', case\\n                           when w.stk_item = \\'Y\\' then \\'Stocking\\'\\n                           when x.vend_no like \\'%SHOP%\\' then \\'Resale\\'\\n                           else \\'Purchasing\\'\\n                           end as \\'Inventory type\\',case\\n                           when x.vend_no like \\'%SHOP%\\' and x.manu_no <> \\'ELEENT\\' then \\'Value-Add Connector\\'\\n                           when x.vend_no like \\'%SHOP%\\' and x.manu_no = \\'ELEENT\\' and i.prod_cat = \\'CAB\\' then \\'Cable Assembly\\'\\n                           when x.vend_no like \\'%SHOP%\\' and x.manu_no = \\'ELEENT\\' and i.prod_cat <> \\'CAB\\' then \\'Other Value-Add Assembly\\'\\n                           else \\'Non-VA\\'\\n                           end \\'Distribution Type\\'\\nfrom inv_trx x\\njoin ord_Detl d6 on d6.order_no = x.order_no and d6.lin_no = x.lin_no\\njoin ord_hedr h4 on h4.order_no = x.order_no\\njoin slsman s5 on s5.slsman_no = x.slsman_1 \\njoin customer c on c.cust_no = x.cust_no\\njoin item i on i.item_no = x.item_no and i.manu_no = x.manu_no\\njoin codes s on s.code_id = i.prod_cat and s.code_type = \\'P\\'\\njoin shp_hedr h on h.ship_no = x.ship_no\\nleft join (select  distinct (d.item_no+d.manu_no+h.cust_no) as \\'contract_identifier\\', h.cust_no, d.item_no, d.manu_no\\n               from ord_detl d\\n                     join ord_hedr h on h.order_no = d.order_no and h.ord_type = \\'N\\'\\n                     where d.status <> \\'V\\' and h.status <> \\'V\\') y on y.cust_no = x.cust_no and y.manu_no = x.manu_no and y.item_no = x.item_no\\nleft join (select distinct (w.item_no+w.manu_no) as \\'stocking_identifier\\', w.item_no, w.manu_no, w.stk_item\\n                     from itm_whse w\\n                     where w.stk_item = \\'Y\\') w on w.item_no = x.item_no and w.manu_no = x.manu_no\\nwhere  x.trx_qty > 0 and x.ship_debit_amt <> 0 and x.unit_cost <> \\'0\\' and x.unit_price <> \\'0\\' and x.trx_type = \\'S\\' and x.cust_no not like \\'%SHOP%\\' and x.trx_date between ((getdate() - 365)) and ((getdate()))\\nunion\\n-- Shipment quantity is greater than zero, unit price is greater than zero, cost is zero, margin is 100% on all lines\\nselect x.inv_trx_rec \\'Inventory Transaction Record\\', x.order_no \\'Order Number\\', x.lin_no \\'Order Line\\', x.trx_date \\'Invoice Date\\', c.cust_name as \\'Customer Name\\', c.cust_no as \\'Customer Number\\',\\n                            case when c.cust_type like \\'A%\\' then \\'Subcontractor\\'\\n                                              when c.cust_type like \\'B%\\' then \\'OEM\\'\\n                                              when (c.cust_type like \\'C%\\' or c.cust_Type like \\'D%\\') then \\'Aftermarket\\'\\n                                              when c.cust_type like \\'E%\\' then \\'Government\\'\\n                                              when c.cust_type like \\'F%\\' then \\'Franchised Distributor\\'\\n                                              when c.cust_type like \\'G%\\' then \\'Broker/Disty Not Franchised\\'\\n                                                       else \\'Other\\' \\n                                                       end as \\'Customer Classification\\',\\ns5.slsman_nam \\'Salesman\\',  case when  h4.ord_type = \\'C\\' then \\'Credit Order\\' else \\'Sales Order\\' end as \\'Order Type\\',  x.item_no as \\'SKU\\', x.manu_no as \\'Manu No\\', x.vend_no as \\'Vend No\\', s.code_desc as \\'Product Type\\', \\n                                               case when d6.pkg_label = \\'NONE\\' then i.uom\\n                                                                when d6.pkg_label = \\'\\' then i.uom\\n                                                                  else d6.pkg_label end as \\'Ship UOM\\'\\n                                                , h.st_city as \\'Ship-to City\\', h.st_state as \\'Ship-to State\\', h.st_cntry as \\'Ship-to Country\\',\\'Electro\\' as \\'Business line\\', x.trx_qty \\'Transaction Quantity\\', (x.unit_cost * x.trx_qty) as \\'Extended Inventory Cost\\', (x.unit_price * x.trx_Qty) as \\'Extended Resale\\', \\'100\\' as \\'Margin\\', \\'USD\\' as \\'Currency\\', case\\n                           when y.item_no is NULL then \\'Ad-hoc\\'\\n                           else \\'LTA\\'\\n                           end as \\'LTA vs. Ad-hoc\\', case\\n                           when w.stk_item = \\'Y\\' then \\'Stocking\\'\\n                           when x.vend_no like \\'%SHOP%\\' then \\'Resale\\'\\n                           else \\'Purchasing\\'\\n                           end as \\'Inventory type\\',case\\n                           when x.vend_no like \\'%SHOP%\\' and x.manu_no <> \\'ELEENT\\' then \\'Value-Add Connector\\'\\n                           when x.vend_no like \\'%SHOP%\\' and x.manu_no = \\'ELEENT\\' and i.prod_cat = \\'CAB\\' then \\'Cable Assembly\\'\\n                           when x.vend_no like \\'%SHOP%\\' and x.manu_no = \\'ELEENT\\' and i.prod_cat <> \\'CAB\\' then \\'Other Value-Add Assembly\\'\\n                         else \\'Non-VA\\'\\n                           end \\'Distribution Type\\'\\nfrom inv_trx x\\njoin ord_Detl d6 on d6.order_no = x.order_no and d6.lin_no = x.lin_no\\njoin ord_hedr h4 on h4.order_no = x.order_no\\njoin slsman s5 on s5.slsman_no = x.slsman_1 \\njoin customer c on c.cust_no = x.cust_no\\njoin item i on i.item_no = x.item_no and i.manu_no = x.manu_no\\njoin codes s on s.code_id = i.prod_cat and s.code_type = \\'P\\'\\njoin shp_hedr h on h.ship_no = x.ship_no\\nleft join (select  distinct (d.item_no+d.manu_no+h.cust_no) as \\'contract_identifier\\', h.cust_no, d.item_no, d.manu_no\\n               from ord_detl d\\n                     join ord_hedr h on h.order_no = d.order_no and h.ord_type = \\'N\\'\\n                     where d.status <> \\'V\\' and h.status <> \\'V\\') y on y.cust_no = x.cust_no and y.manu_no = x.manu_no and y.item_no = x.item_no\\nleft join (select distinct (w.item_no+w.manu_no) as \\'stocking_identifier\\', w.item_no, w.manu_no, w.stk_item\\n                     from itm_whse w\\n                     where w.stk_item = \\'Y\\') w on w.item_no = x.item_no and w.manu_no = x.manu_no\\nwhere  x.trx_qty > 0 and x.unit_cost = \\'0\\' and x.unit_price <> \\'0\\' and x.trx_type = \\'S\\' and x.cust_no not like \\'%SHOP%\\' and  x.trx_date between ((getdate() - 365)) and ((getdate()))\\nunion\\n-- Shipment quantity is greater than zero, unit price is zero, cost is greater than zero, margin is 0% on all lines\\nselect x.inv_trx_rec \\'Inventory Transaction Record\\', x.order_no \\'Order Number\\', x.lin_no \\'Order Line\\', x.trx_date \\'Invoice Date\\', c.cust_name as \\'Customer Name\\', c.cust_no as \\'Customer Number\\',\\n                            case when c.cust_type like \\'A%\\' then \\'Subcontractor\\'\\n                                              when c.cust_type like \\'B%\\' then \\'OEM\\'\\n                                              when (c.cust_type like \\'C%\\' or c.cust_Type like \\'D%\\') then \\'Aftermarket\\'\\n                                              when c.cust_type like \\'E%\\' then \\'Government\\'\\n                                              when c.cust_type like \\'F%\\' then \\'Franchised Distributor\\'\\n                                              when c.cust_type like \\'G%\\' then \\'Broker/Disty Not Franchised\\'\\n                                                       else \\'Other\\' \\n                                                       end as \\'Customer Classification\\',\\ns5.slsman_nam \\'Salesman\\',  case when  h4.ord_type = \\'C\\' then \\'Credit Order\\' else \\'Sales Order\\' end as \\'Order Type\\',  x.item_no as \\'SKU\\', x.manu_no as \\'Manu No\\', x.vend_no as \\'Vend No\\', s.code_desc as \\'Product Type\\', \\n                                               case when d6.pkg_label = \\'NONE\\' then i.uom\\n                                                                when d6.pkg_label = \\'\\' then i.uom\\n                                                                  else d6.pkg_label end as \\'Ship UOM\\'\\n                                                , h.st_city as \\'Ship-to City\\', h.st_state as \\'Ship-to State\\', h.st_cntry as \\'Ship-to Country\\',\\'Electro\\' as \\'Business line\\', x.trx_qty \\'Transaction Quantity\\', (x.unit_cost * x.trx_qty) as \\'Extended Inventory Cost\\', (x.unit_price * x.trx_Qty) as \\'Extended Resale\\', \\'0\\' as \\'Margin\\', \\'USD\\' as \\'Currency\\', case\\n                           when y.item_no is NULL then \\'Ad-hoc\\'\\n                           else \\'LTA\\'\\n                           end as \\'LTA vs. Ad-hoc\\', case\\n                           when w.stk_item = \\'Y\\' then \\'Stocking\\'\\n                           when x.vend_no like \\'%SHOP%\\' then \\'Resale\\'\\n                           else \\'Purchasing\\'\\n                           end as \\'Inventory type\\',case\\n                           when x.vend_no like \\'%SHOP%\\' and x.manu_no <> \\'ELEENT\\' then \\'Value-Add Connector\\'\\n                           when x.vend_no like \\'%SHOP%\\' and x.manu_no = \\'ELEENT\\' and i.prod_cat = \\'CAB\\' then \\'Cable Assembly\\'\\n                           when x.vend_no like \\'%SHOP%\\' and x.manu_no = \\'ELEENT\\' and i.prod_cat <> \\'CAB\\' then \\'Other Value-Add Assembly\\'\\n                           else \\'Non-VA\\'\\n                           end \\'Distribution Type\\'\\nfrom inv_trx x\\njoin ord_Detl d6 on d6.order_no = x.order_no and d6.lin_no = x.lin_no\\njoin ord_hedr h4 on h4.order_no = x.order_no\\njoin slsman s5 on s5.slsman_no = x.slsman_1 \\njoin customer c on c.cust_no = x.cust_no\\njoin item i on i.item_no = x.item_no and i.manu_no = x.manu_no\\njoin codes s on s.code_id = i.prod_cat and s.code_type = \\'P\\'\\njoin shp_hedr h on h.ship_no = x.ship_no\\nleft join (select  distinct (d.item_no+d.manu_no+h.cust_no) as \\'contract_identifier\\', h.cust_no, d.item_no, d.manu_no\\n               from ord_detl d\\n                     join ord_hedr h on h.order_no = d.order_no and h.ord_type = \\'N\\'\\n                     where d.status <> \\'V\\' and h.status <> \\'V\\') y on y.cust_no = x.cust_no and y.manu_no = x.manu_no and y.item_no = x.item_no\\nleft join (select distinct (w.item_no+w.manu_no) as \\'stocking_identifier\\', w.item_no, w.manu_no, w.stk_item\\n                     from itm_whse w\\n                     where w.stk_item = \\'Y\\') w on w.item_no = x.item_no and w.manu_no = x.manu_no\\nwhere  x.trx_qty > 0 and x.unit_cost > \\'0\\' and x.unit_price = \\'0\\' and x.trx_type = \\'S\\' and x.cust_no not like \\'%SHOP%\\' and x.trx_date between ((getdate() - 365)) and ((getdate()))\\nunion\\n-- Shipment quantity is zero, margin is 0% on all lines, for reporting purposes only\\nselect x.inv_trx_rec \\'Inventory Transaction Record\\', x.order_no \\'Order Number\\', x.lin_no \\'Order Line\\', x.trx_date \\'Invoice Date\\', c.cust_name as \\'Customer Name\\', c.cust_no as \\'Customer Number\\',\\n                            case when c.cust_type like \\'A%\\' then \\'Subcontractor\\'\\n                                              when c.cust_type like \\'B%\\' then \\'OEM\\'\\n                                              when (c.cust_type like \\'C%\\' or c.cust_Type like \\'D%\\') then \\'Aftermarket\\'\\n                                              when c.cust_type like \\'E%\\' then \\'Government\\'\\n                                              when c.cust_type like \\'F%\\' then \\'Franchised Distributor\\'\\n                                              when c.cust_type like \\'G%\\' then \\'Broker/Disty Not Franchised\\'\\n                                                       else \\'Other\\' \\n                                                       end as \\'Customer Classification\\',\\ns5.slsman_nam \\'Salesman\\',  case when  h4.ord_type = \\'C\\' then \\'Credit Order\\' else \\'Sales Order\\' end as \\'Order Type\\',  x.item_no as \\'SKU\\', x.manu_no as \\'Manu No\\', x.vend_no as \\'Vend No\\', s.code_desc as \\'Product Type\\', \\n                                               case when d6.pkg_label = \\'NONE\\' then i.uom\\n                                                                when d6.pkg_label = \\'\\' then i.uom\\n                                                                  else d6.pkg_label end as \\'Ship UOM\\'\\n                                                , h.st_city as \\'Ship-to City\\', h.st_state as \\'Ship-to State\\', h.st_cntry as \\'Ship-to Country\\',\\'Electro\\' as \\'Business line\\', x.trx_qty \\'Transaction Quantity\\', (x.unit_cost * x.trx_qty) as \\'Extended Inventory Cost\\', (x.unit_price * x.trx_Qty) as \\'Extended Resale\\', \\'0\\' as \\'Margin\\', \\'USD\\' as \\'Currency\\', case\\n                           when y.item_no is NULL then \\'Ad-hoc\\'\\n                           else \\'LTA\\'\\n                           end as \\'LTA vs. Ad-hoc\\', case\\n                           when w.stk_item = \\'Y\\' then \\'Stocking\\'\\n                           when x.vend_no like \\'%SHOP%\\' then \\'Resale\\'\\n                           else \\'Purchasing\\'\\n                           end as \\'Inventory type\\',case\\n                           when x.vend_no like \\'%SHOP%\\' and x.manu_no <> \\'ELEENT\\' then \\'Value-Add Connector\\'\\n                           when x.vend_no like \\'%SHOP%\\' and x.manu_no = \\'ELEENT\\' and i.prod_cat = \\'CAB\\' then \\'Cable Assembly\\'\\n                           when x.vend_no like \\'%SHOP%\\' and x.manu_no = \\'ELEENT\\' and i.prod_cat <> \\'CAB\\' then \\'Other Value-Add Assembly\\'\\n                           else \\'Non-VA\\'\\n                           end \\'Distribution Type\\'\\nfrom inv_trx x\\njoin ord_Detl d6 on d6.order_no = x.order_no and d6.lin_no = x.lin_no\\njoin ord_hedr h4 on h4.order_no = x.order_no\\njoin slsman s5 on s5.slsman_no = x.slsman_1 \\njoin customer c on c.cust_no = x.cust_no\\njoin item i on i.item_no = x.item_no and i.manu_no = x.manu_no\\njoin codes s on s.code_id = i.prod_cat and s.code_type = \\'P\\'\\nleft join shp_hedr h on h.ship_no = x.ship_no\\nleft join (select  distinct (d.item_no+d.manu_no+h.cust_no) as \\'contract_identifier\\', h.cust_no, d.item_no, d.manu_no\\n               from ord_detl d\\n                     join ord_hedr h on h.order_no = d.order_no and h.ord_type = \\'N\\'\\n                     where d.status <> \\'V\\' and h.status <> \\'V\\') y on y.cust_no = x.cust_no and y.manu_no = x.manu_no and y.item_no = x.item_no\\nleft join (select distinct (w.item_no+w.manu_no) as \\'stocking_identifier\\', w.item_no, w.manu_no, w.stk_item\\n                     from itm_whse w\\n                     where w.stk_item = \\'Y\\') w on w.item_no = x.item_no and w.manu_no = x.manu_no\\nwhere  x.trx_qty = 0 and x.trx_type = \\'S\\' and x.cust_no not like \\'%SHOP%\\' and x.trx_date between ((getdate() - 365)) and ((getdate()))\\nunion \\n-- Credit where order quantity is less than zero, both price and cost do not equal zero \\nselect x.inv_trx_rec \\'Inventory Transaction Record\\', x.order_no \\'Order Number\\', x.lin_no \\'Order Line\\', x.trx_date \\'Invoice Date\\', c.cust_name as \\'Customer Name\\', c.cust_no as \\'Customer Number\\',\\n                            case when c.cust_type like \\'A%\\' then \\'Subcontractor\\'\\n                                              when c.cust_type like \\'B%\\' then \\'OEM\\'\\n                                              when (c.cust_type like \\'C%\\' or c.cust_Type like \\'D%\\') then \\'Aftermarket\\'\\n                                              when c.cust_type like \\'E%\\' then \\'Government\\'\\n                                              when c.cust_type like \\'F%\\' then \\'Franchised Distributor\\'\\n                                              when c.cust_type like \\'G%\\' then \\'Broker/Disty Not Franchised\\'\\n                                                       else \\'Other\\' \\n                                                       end as \\'Customer Classification\\',\\ns5.slsman_nam \\'Salesman\\',  case when  h4.ord_type = \\'C\\' then \\'Credit Order\\' else \\'Sales Order\\' end as \\'Order Type\\',  x.item_no as \\'SKU\\', x.manu_no as \\'Manu No\\', x.vend_no as \\'Vend No\\', s.code_desc as \\'Product Type\\', \\n                                               case when d6.pkg_label = \\'NONE\\' then i.uom\\n                                                                when d6.pkg_label = \\'\\' then i.uom\\n                                                                  else d6.pkg_label end as \\'Ship UOM\\'\\n                                                , h.st_city as \\'Ship-to City\\', h.st_state as \\'Ship-to State\\', h.st_cntry as \\'Ship-to Country\\',\\'Electro\\' as \\'Business line\\', x.trx_qty \\'Transaction Quantity\\', (x.unit_cost * x.ord_qty) as \\'Extended Inventory Cost\\', (x.unit_price * x.ord_Qty) as \\'Extended Resale\\', round(-((x.unit_cost / x.unit_price) -1),2) as \\'Margin\\',  \\'USD\\' as \\'Currency\\', case\\n                           when y.item_no is NULL then \\'Ad-hoc\\'\\n                           else \\'LTA\\'\\n                           end as \\'LTA vs. Ad-hoc\\', case\\n                           when w.stk_item = \\'Y\\' then \\'Stocking\\'\\n                           when x.vend_no like \\'%SHOP%\\' then \\'Resale\\'\\n                           else \\'Purchasing\\'\\n                           end as \\'Inventory type\\',case\\n                           when x.vend_no like \\'%SHOP%\\' and x.manu_no <> \\'ELEENT\\' then \\'Value-Add Connector\\'\\n                           when x.vend_no like \\'%SHOP%\\' and x.manu_no = \\'ELEENT\\' and i.prod_cat = \\'CAB\\' then \\'Cable Assembly\\'\\n                           when x.vend_no like \\'%SHOP%\\' and x.manu_no = \\'ELEENT\\' and i.prod_cat <> \\'CAB\\' then \\'Other Value-Add Assembly\\'\\n                          else \\'Non-VA\\'\\n                           end \\'Distribution Type\\'\\nfrom inv_trx x\\njoin ord_Detl d6 on d6.order_no = x.order_no and d6.lin_no = x.lin_no\\njoin ord_hedr h4 on h4.order_no = x.order_no\\njoin slsman s5 on s5.slsman_no = x.slsman_1 \\njoin customer c on c.cust_no = x.cust_no\\njoin item i on i.item_no = x.item_no and i.manu_no = x.manu_no\\njoin codes s on s.code_id = i.prod_cat and s.code_type = \\'P\\'\\nleft join shp_hedr h on h.ship_no = x.ship_no\\nleft join (select  distinct (d.item_no+d.manu_no+h.cust_no) as \\'contract_identifier\\', h.cust_no, d.item_no, d.manu_no\\n               from ord_detl d\\n                     join ord_hedr h on h.order_no = d.order_no and h.ord_type = \\'N\\'\\n                     where d.status <> \\'V\\' and h.status <> \\'V\\') y on y.cust_no = x.cust_no and y.manu_no = x.manu_no and y.item_no = x.item_no\\nleft join (select distinct (w.item_no+w.manu_no) as \\'stocking_identifier\\', w.item_no, w.manu_no, w.stk_item\\n                     from itm_whse w\\n                     where w.stk_item = \\'Y\\') w on w.item_no = x.item_no and w.manu_no = x.manu_no\\nwhere  x.ord_qty < 0 and x.unit_Cost <> \\'0\\' and x.unit_price <> \\'0\\' and x.trx_type = \\'S\\' and x.cust_no not like \\'%SHOP%\\' and x.trx_date between ((getdate() - 365)) and ((getdate()))\\nunion \\n-- Credit where order quantity is less than zero, price is zero but unit cost is not zero, margin is 0% on all lines \\nselect x.inv_trx_rec \\'Inventory Transaction Record\\', x.order_no \\'Order Number\\', x.lin_no \\'Order Line\\', x.trx_date \\'Invoice Date\\', c.cust_name as \\'Customer Name\\', c.cust_no as \\'Customer Number\\',\\n                            case when c.cust_type like \\'A%\\' then \\'Subcontractor\\'\\n                                              when c.cust_type like \\'B%\\' then \\'OEM\\'\\n                                              when (c.cust_type like \\'C%\\' or c.cust_Type like \\'D%\\') then \\'Aftermarket\\'\\n                                              when c.cust_type like \\'E%\\' then \\'Government\\'\\n                                              when c.cust_type like \\'F%\\' then \\'Franchised Distributor\\'\\n                                              when c.cust_type like \\'G%\\' then \\'Broker/Disty Not Franchised\\'\\n                                                       else \\'Other\\' \\n                                                       end as \\'Customer Classification\\',\\ns5.slsman_nam \\'Salesman\\',  case when  h4.ord_type = \\'C\\' then \\'Credit Order\\' else \\'Sales Order\\' end as \\'Order Type\\',  x.item_no as \\'SKU\\', x.manu_no as \\'Manu No\\', x.vend_no as \\'Vend No\\', s.code_desc as \\'Product Type\\', \\n                                               case when d6.pkg_label = \\'NONE\\' then i.uom\\n                                                                when d6.pkg_label = \\'\\' then i.uom\\n                                                                  else d6.pkg_label end as \\'Ship UOM\\'\\n                                                , h.st_city as \\'Ship-to City\\', h.st_state as \\'Ship-to State\\', h.st_cntry as \\'Ship-to Country\\',\\'Electro\\' as \\'Business line\\', x.trx_qty \\'Transaction Quantity\\', (x.unit_cost * x.ord_qty) as \\'Extended Inventory Cost\\', (x.unit_price * x.ord_Qty) as \\'Extended Resale\\', \\'0\\' as \\'Margin\\',  \\'USD\\' as \\'Currency\\', case\\n                           when y.item_no is NULL then \\'Ad-hoc\\'\\n                           else \\'LTA\\'\\n                           end as \\'LTA vs. Ad-hoc\\', case\\n                           when w.stk_item = \\'Y\\' then \\'Stocking\\'\\n                           when x.vend_no like \\'%SHOP%\\' then \\'Resale\\'\\n                           else \\'Purchasing\\'\\n                           end as \\'Inventory type\\',case\\n                           when x.vend_no like \\'%SHOP%\\' and x.manu_no <> \\'ELEENT\\' then \\'Value-Add Connector\\'\\n                           when x.vend_no like \\'%SHOP%\\' and x.manu_no = \\'ELEENT\\' and i.prod_cat = \\'CAB\\' then \\'Cable Assembly\\'\\n                           when x.vend_no like \\'%SHOP%\\' and x.manu_no = \\'ELEENT\\' and i.prod_cat <> \\'CAB\\' then \\'Other Value-Add Assembly\\'\\n                         else \\'Non-VA\\'\\n                           end \\'Distribution Type\\'\\nfrom inv_trx x\\njoin ord_Detl d6 on d6.order_no = x.order_no and d6.lin_no = x.lin_no\\njoin ord_hedr h4 on h4.order_no = x.order_no\\njoin slsman s5 on s5.slsman_no = x.slsman_1 \\njoin customer c on c.cust_no = x.cust_no\\njoin item i on i.item_no = x.item_no and i.manu_no = x.manu_no\\njoin codes s on s.code_id = i.prod_cat and s.code_type = \\'P\\'\\nleft join shp_hedr h on h.ship_no = x.ship_no\\nleft join (select  distinct (d.item_no+d.manu_no+h.cust_no) as \\'contract_identifier\\', h.cust_no, d.item_no, d.manu_no\\n               from ord_detl d\\n                     join ord_hedr h on h.order_no = d.order_no and h.ord_type = \\'N\\'\\n                     where d.status <> \\'V\\' and h.status <> \\'V\\') y on y.cust_no = x.cust_no and y.manu_no = x.manu_no and y.item_no = x.item_no\\nleft join (select distinct (w.item_no+w.manu_no) as \\'stocking_identifier\\', w.item_no, w.manu_no, w.stk_item\\n                     from itm_whse w\\n                     where w.stk_item = \\'Y\\') w on w.item_no = x.item_no and w.manu_no = x.manu_no\\nwhere  x.ord_qty < 0 and x.unit_Cost <> \\'0\\' and x.unit_price = \\'0\\' and x.trx_type = \\'S\\' and x.cust_no not like \\'%SHOP%\\' and x.trx_date between ((getdate() - 365)) and ((getdate()))\\nunion \\n-- Credit where order quantity is less than zero, cost is zero but unit price is not zero, margin is 100% on all lines \\nselect x.inv_trx_rec \\'Inventory Transaction Record\\', x.order_no \\'Order Number\\', x.lin_no \\'Order Line\\', x.trx_date \\'Invoice Date\\', c.cust_name as \\'Customer Name\\', c.cust_no as \\'Customer Number\\',\\n                            case when c.cust_type like \\'A%\\' then \\'Subcontractor\\'\\n                                              when c.cust_type like \\'B%\\' then \\'OEM\\'\\n                                              when (c.cust_type like \\'C%\\' or c.cust_Type like \\'D%\\') then \\'Aftermarket\\'\\n                                              when c.cust_type like \\'E%\\' then \\'Government\\'\\n                                              when c.cust_type like \\'F%\\' then \\'Franchised Distributor\\'\\n                                              when c.cust_type like \\'G%\\' then \\'Broker/Disty Not Franchised\\'\\n                                                       else \\'Other\\' \\n                                                       end as \\'Customer Classification\\',\\ns5.slsman_nam \\'Salesman\\',  case when  h4.ord_type = \\'C\\' then \\'Credit Order\\' else \\'Sales Order\\' end as \\'Order Type\\',  x.item_no as \\'SKU\\', x.manu_no as \\'Manu No\\', x.vend_no as \\'Vend No\\', s.code_desc as \\'Product Type\\', \\n                                               case when d6.pkg_label = \\'NONE\\' then i.uom\\n                                                                when d6.pkg_label = \\'\\' then i.uom\\n                                                                  else d6.pkg_label end as \\'Ship UOM\\'\\n                                                , h.st_city as \\'Ship-to City\\', h.st_state as \\'Ship-to State\\', h.st_cntry as \\'Ship-to Country\\',\\'Electro\\' as \\'Business line\\', x.trx_qty \\'Transaction Quantity\\', (x.unit_cost * x.ord_qty) as \\'Extended Inventory Cost\\', (x.unit_price * x.ord_Qty) as \\'Extended Resale\\', \\'100\\' as \\'Margin\\',  \\'USD\\' as \\'Currency\\', case\\n                           when y.item_no is NULL then \\'Ad-hoc\\'\\n                           else \\'LTA\\'\\n                           end as \\'LTA vs. Ad-hoc\\', case\\n                           when w.stk_item = \\'Y\\' then \\'Stocking\\'\\n                           when x.vend_no like \\'%SHOP%\\' then \\'Resale\\'\\n                           else \\'Purchasing\\'\\n                           end as \\'Inventory type\\',case\\n                           when x.vend_no like \\'%SHOP%\\' and x.manu_no <> \\'ELEENT\\' then \\'Value-Add Connector\\'\\n                           when x.vend_no like \\'%SHOP%\\' and x.manu_no = \\'ELEENT\\' and i.prod_cat = \\'CAB\\' then \\'Cable Assembly\\'\\n                           when x.vend_no like \\'%SHOP%\\' and x.manu_no = \\'ELEENT\\' and i.prod_cat <> \\'CAB\\' then \\'Other Value-Add Assembly\\'\\n                          else \\'Non-VA\\'\\n                           end \\'Distribution Type\\'\\nfrom inv_trx x\\njoin ord_Detl d6 on d6.order_no = x.order_no and d6.lin_no = x.lin_no\\njoin ord_hedr h4 on h4.order_no = x.order_no\\njoin slsman s5 on s5.slsman_no = x.slsman_1 \\njoin customer c on c.cust_no = x.cust_no\\njoin item i on i.item_no = x.item_no and i.manu_no = x.manu_no\\njoin codes s on s.code_id = i.prod_cat and s.code_type = \\'P\\'\\nleft join shp_hedr h on h.ship_no = x.ship_no\\nleft join (select  distinct (d.item_no+d.manu_no+h.cust_no) as \\'contract_identifier\\', h.cust_no, d.item_no, d.manu_no\\n               from ord_detl d\\n                     join ord_hedr h on h.order_no = d.order_no and h.ord_type = \\'N\\'\\n                     where d.status <> \\'V\\' and h.status <> \\'V\\') y on y.cust_no = x.cust_no and y.manu_no = x.manu_no and y.item_no = x.item_no\\nleft join (select distinct (w.item_no+w.manu_no) as \\'stocking_identifier\\', w.item_no, w.manu_no, w.stk_item\\n                     from itm_whse w\\n                     where w.stk_item = \\'Y\\') w on w.item_no = x.item_no and w.manu_no = x.manu_no\\nwhere  x.ord_qty < 0 and x.unit_Cost = \\'0\\' and x.unit_price <> \\'0\\' and x.trx_type = \\'S\\' and x.cust_no not like \\'%SHOP%\\' and x.trx_date between ((getdate() - 365)) and ((getdate()))\\n',",
				"     isolationLevel: 'READ_COMMITTED') ~> WeeklyTRANSACTIONFile",
				"EPDS01AROpen sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     container: 'datafactoryfiles',",
				"     folderPath: 'ARopen',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     partitionFileNames:['ARopen.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> AROpen",
				"EPDSAPOpen sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     container: 'datafactoryfiles',",
				"     folderPath: 'APopen',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     partitionFileNames:['APopen.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> APOpen",
				"EPDSPOOpen sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     container: 'datafactoryfiles',",
				"     folderPath: 'POopen',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     partitionFileNames:['POopen.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> POOpen",
				"WeeklyTRANSACTIONFile sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     container: 'datafactoryfiles',",
				"     folderPath: 'Transactions',",
				"     columnDelimiter: '|',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     partitionFileNames:[(concat('Electro_Transaction_',toString(currentDate(), 'MM_dd_yyyy'), '.csv')\r",
				")],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     quoteAll: true,",
				"     partitionBy('hash', 1)) ~> WeeklyTransactioNFileSink"
			]
		}
	}
}